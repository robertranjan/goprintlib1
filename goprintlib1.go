package goprintlib1

import (
	"flag"
	"fmt"
	"strings"
)

var letters = map[string][7]string{
	"A": {"0111110", "1000001", "1000001", "1111111", "1000001", "1000001", "1000001"},
	"B": {"1111110", "1000001", "1000001", "1111110", "1000001", "1000001", "1111110"},
	"C": {"0111111", "1000000", "1000000", "1000000", "1000000", "1000000", "0111111"},
	"D": {"1111110", "1000001", "1000001", "1000001", "1000001", "1000001", "1111110"},
	"E": {"1111111", "1000000", "1000000", "1111111", "1000000", "1000000", "1111111"},
	"F": {"1111111", "1000000", "1000000", "1111111", "1000000", "1000000", "1000000"},
	"G": {"0111111", "1000000", "1000000", "1001110", "1000001", "1000001", "0111110"},
	"H": {"1000001", "1000001", "1000001", "1111111", "1000001", "1000001", "1000001"},
	"I": {"0011100", "0001000", "0001000", "0001000", "0001000", "0001000", "0011100"},
	"J": {"1111111", "0001000", "0001000", "0001000", "0001000", "0001000", "1110000"},
	"K": {"1000001", "1000010", "1000100", "1110000", "1001000", "1000100", "1000001"},
	"L": {"1000000", "1000000", "1000000", "1000000", "1000000", "1000000", "1111111"},
	"M": {"1100011", "1010101", "1001101", "1000001", "1000001", "1000001", "1000001"},
	"N": {"1100001", "1100001", "1010001", "1001001", "1000101", "1000011", "1000011"},
	"O": {"0111110", "1000001", "1000001", "1000001", "1000001", "1000001", "0111110"},
	"P": {"1111110", "1000001", "1000001", "1111110", "1000000", "1000000", "1000000"},
	"Q": {"0111100", "1000010", "1000010", "1000010", "1000010", "1000010", "0111001"},
	"R": {"1111110", "1000001", "1000001", "1111110", "1001000", "1000100", "1000011"},
	"S": {"0111111", "1000000", "1000000", "0111110", "0000001", "0000001", "1111110"},
	"T": {"1111111", "0001000", "0001000", "0001000", "0001000", "0001000", "0001000"},
	"U": {"1000001", "1000001", "1000001", "1000001", "1000001", "1000001", "0111110"},
	"V": {"1000001", "1000001", "1000001", "1000001", "0100001", "0010010", "0001100"},
	"W": {"1000001", "1000001", "1000001", "1000001", "1001001", "1010101", "1100011"},
	"X": {"1000001", "0100010", "0010100", "0001000", "0010100", "0100010", "1000001"},
	"Y": {"1000001", "1000001", "1000001", "0011100", "0001000", "0001000", "0001000"},
	"Z": {"1111111", "0000010", "0000100", "0001000", "0010000", "0100000", "1111111"},
}
var symbol string
var word string
var orientation string

func printAllLetters() {
	for letter := range letters {
		for j := 0; j < 7; j++ {
			fmt.Println(strings.Replace(strings.Replace(letters[letter][j], "1", symbol, -1), "0", " ", -1))
		}
		fmt.Println()
	}
}

func printWord(word string) {
	var w [7]string
	for j := 0; j < 7; j++ {
		for i := 0; i < len(word); i++ {
			w[j] += letters[string(word[i])][j] + "  "
		}
	}
	for i := 0; i < 7; i++ {
		fmt.Println(strings.Replace(strings.Replace(w[i], "1", symbol, -1), "0", " ", -1))
	}
}

func init() {
	flag.StringVar(&symbol, "symbol", "*", "Symbol to be used")
	flag.StringVar(&word, "word", "testing", "Word to be printed")
	flag.Parse()
	word = strings.ToUpper(word)
}
